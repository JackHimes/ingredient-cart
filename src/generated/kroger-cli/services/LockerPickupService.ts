/* generated using openapi-typescript-codegen -- do no edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { lockers_StatusUpdate } from '../models/lockers_StatusUpdate';

import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';

export class LockerPickupService {

    /**
     * Update locker status
     * The Locker Pickup API uses the following status values:<br><ul><li>LOADED - Status to indicate when the order has been loaded into the locker.</li><li>COLLECTED - Status to indicate when the order has been collected by the customer from the locker.</li></ul>
     * @param xCorrelationId Correlation Id
     * @param idempotencyKey A UUID generated by the consumer to ensure that the request is not executed more than once.
     * @param requestBody
     * @returns any OK
     * @throws ApiError
     */
    public static postLockersV1OrderEvents(
        xCorrelationId: string,
        idempotencyKey: string,
        requestBody: lockers_StatusUpdate,
    ): CancelablePromise<{
        data?: {
            message?: string;
        };
    }> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/lockers/v1/order-events',
            headers: {
                'X-Correlation-ID': xCorrelationId,
                'Idempotency-Key': idempotencyKey,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                400: `Bad Request`,
                404: `Not Found`,
                500: `Internal Server Error`,
            },
        });
    }

}
